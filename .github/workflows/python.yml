name: Python

on:
  push: { branches: ["main"] }
  pull_request:
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11" # keep in sync with /pyproject.toml

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Get date
        id: get-date
        run: echo "date=$(date --utc '+%Y_%m')" >> $GITHUB_OUTPUT

      - name: Cache Poetry
        uses: actions/cache@v3
        id: cache-poetry
        with:
          path: ~/.local
          key: "poetry-${{ runner.os }}-${{ steps.get-date.outputs.date }}"

      - name: Setup Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Setup just
        uses: taiki-e/install-action@v2
        with:
          tool: just

      - name: Install dependencies
        run: poetry install --no-interaction --compile --no-root

      - name: Format
        run: just format-check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Get date
        id: get-date
        run: echo "date=$(date --utc '+%Y_%m')" >> $GITHUB_OUTPUT

      - name: Cache Poetry
        uses: actions/cache@v3
        id: cache-poetry
        with:
          path: ~/.local
          key: "poetry-${{ runner.os }}-${{ steps.get-date.outputs.date }}"

      - name: Setup Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Setup just
        uses: taiki-e/install-action@v2
        with:
          tool: just

      - name: Install dependencies
        run: poetry install --no-interaction --compile --no-root

      - name: Lint
        run: just lint

  type-check:
    name: Type-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Get date
        id: get-date
        run: echo "date=$(date --utc '+%Y_%m')" >> $GITHUB_OUTPUT

      - name: Cache Poetry
        uses: actions/cache@v3
        id: cache-poetry
        with:
          path: ~/.local
          key: "poetry-${{ runner.os }}-${{ steps.get-date.outputs.date }}"

      - name: Setup Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Setup just
        uses: taiki-e/install-action@v2
        with:
          tool: just

      - name: Install dependencies
        run: poetry install --no-interaction --compile --no-root

      - name: Type-check
        run: just type-check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Get date
        id: get-date
        run: echo "date=$(date --utc '+%Y_%m')" >> $GITHUB_OUTPUT

      - name: Cache Poetry
        uses: actions/cache@v3
        id: cache-poetry
        with:
          path: ~/.local
          key: "poetry-${{ runner.os }}-${{ steps.get-date.outputs.date }}"

      - name: Setup Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Setup just
        uses: taiki-e/install-action@v2
        with:
          tool: just

      - name: Install dependencies
        run: poetry install --no-interaction --compile --no-root

      - name: Test
        run: just test
